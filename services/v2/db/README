DB Creation/Upgrade/Management README
-------------------------------------

Upgrade requires db.php service, an existing MySQL DB, and the table "upgrades" to exist in this DB.
Generation of MySQL DB and placement of services not covered- should conform to ARIS server installation instructions.

If "db_upgrades" table doesn't exist in DB (a totally empty database), run upgrades_table.sql in this directory.

Once this is all in place, you can run the "upgrade" service in db.php in the same way you'd run any other ARIS service (ex: http://dev.arisgames.org/server/json.php/v2.db.upgrade).
This will check the db_upgrades table for what upgrades have already run, and cross reference that with the list of "upgrades" in the "upgrades" folder.

Upgrades are simply SQL files (newline separated MySQL queries) in the upgrades folder, and take the filename of VER_MAJ.VER_MIN.sql. Running db.upgrade will run those upgrades not already run, in order. That's it.

For example, if there exists 0.0.sql, 0.0.sql, 0.1.sql, 0.2.sql, 1.0.sql, and 1.1.sql in the upgrades folder, and the upgrade script has recorded that 0.0.sql and 0.1.sql have already been run, running the upgrade service will result in 0.2.sql, 1.0.sql, and 1.1.sql being run, and being marked as such. running the upgrade service again will result in nothing new happening (all scripts have already been run, and won't be re-run).

To add an upgrade, simply find the latest upgrade in the upgrades folder, and add a new file with incremented version major or version minor as its file name. Then run db.upgrade.


TL;DR:
db.upgrade reads all files in the "upgrades" folder, and will execute all those not yet executed (and take care of keeping track of which have been executed). To add upgrade, put a new file (containing newline separated MySQL queries) in that folder with appropriate version filename (VER_MAJ.VER_MIN.sql).

